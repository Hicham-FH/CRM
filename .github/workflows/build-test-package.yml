name: Build, Test and Package

on:
  pull_request:
    branches:    
      - master
    paths-ignore:
      - '**/*.md'
  push:
    branches:
    - master
    paths-ignore:
      - '**/*.md'

jobs:
  test-n-package:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['20.x']
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up CodeQL
      uses: github/codeql-action/setup@v2
      with:
        languages: javascript, python # Ajoute d'autres langages si nÃ©cessaire

    - name: Run CodeQL Analysis
      uses: github/codeql-action/analyze@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'

    - name: Declare some variables
      id: vars
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"

    - name: get-npm-version
      id: package-version
      uses: martinbeentjes/npm-get-version-action@main

    - name: Get Env Ready
      run: |
        npm ci

    - name: Get Composer Cache Directory
      id: composer-cache
      run: |
        cd src
        echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - uses: actions/cache@v4
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: Build App
      run: |
        npm run package

    - name: Run Docker
      run: |
        npm run ci-docker-test-start
        docker compose -f docker/docker-compose.test-php8-apache.yaml ps -a
        docker compose -f docker/docker-compose.test-php8-apache.yaml logs

    - name: Test Server
      run: |
          curl -vvv http://127.0.0.1/api/public/echo
          docker compose -f docker/docker-compose.test-php8-apache.yaml ps -a
          docker compose -f docker/docker-compose.test-php8-apache.yaml logs

    - name: Run Cypress Tests
      run: |
        npm run test

    - name: Stop Docker
      run: |
        npm run ci-docker-test-down
  
    - name: Upload zip file
      uses: actions/upload-artifact@v4
      with:
        name: ChurchCRM-${{ steps.package-version.outputs.current-version}}-files
        path: target/ChurchCRM-*.*
